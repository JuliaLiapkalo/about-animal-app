openapi: 3.0.0
info:
  title: Animals API
  description: This app provides an API that allows users to upload CSV and XML files containing animal data. The API maps this data to POJOs (Plain Old Java Objects) and performs validation to ensure each object contains essential fields. Animals are categorized based on their cost, and endpoints are provided for filtering and sorting the data.
  version: 1.0.0
servers:
  - url: http://localhost:8086/api/v1
paths:
  ## to test you can use files by the path: src/main/resources/csvAndXmlFiles.
  /animals/uploads:
    post:
      summary: Add animals to DB from CSV or XML file
      description: Uploads a CSV or XML file containing animal data to add to the database.
      responses:
        '200':
          description: Animals added to the database successfully.
        '400':
          description: Bad request. Invalid file format or data.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary

  #In my local machine this method dosnt work correctly via swagger,
  #I was truing to fix this, but its seems like bug into swagger Ui.
  #Please, try this into generate request in HTTP client in ide or postman. ;)
  ##GET http://localhost:8086/api/v1/animals?
  #    type=cat&
  #    category=3&
  #    sex=male&
  #    sortBy=cost
  /animals:
    get:
      summary: Get filtered and sorted animals
      description: Retrieves animals from the database based on provided filters.
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Filter by type [cat/dog] of animal.
        - in: query
          name: category
          schema:
            type: string
          description: Filter by category[1/2/3/4] of animal.
        - in: query
          name: sex
          schema:
            type: string
          description: Filter by gender [male/female] of animal.
        - in: query
          name: sortBy
          schema:
            type: string
          description: Sort by any [name/type/sex/weight/cost/category] field.
      responses:
        '200':
          description: OK. Retrieved filtered animals successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Bad request. Invalid filter parameters.
        '404':
          description: Not found. No animals match the filter criteria.
